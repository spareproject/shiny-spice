#!/bin/env bash
########################################################################################
iptables -F
iptables -X
iptables -t filter -F
iptables -t filter -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X
iptables -t raw -F
iptables -t raw -X
iptables -t security -F
iptables -t security -X
########################################################################################
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP
########################################################################################
iptables -N LO
iptables -N KNOCK_ONE
iptables -N KNOCK_TWO
iptables -N KNOCK_THREE
iptables -N KNOCK_FOUR
iptables -N SESSION
iptables -N AUTH
iptables -N BLOCKED
iptables -N BRIDGE
iptables -N INTERNAL
########################################################################################
iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
iptables -A INPUT -j BLOCKED
iptables -A INPUT -j KNOCK_ONE
########################################################################################
iptables -A INPUT -m recent --name KNOCK_TWO    --rcheck --seconds 60 --reap -j KNOCK_TWO 
iptables -A INPUT -m recent --name KNOCK_THREE  --rcheck --seconds 60 --reap -j KNOCK_THREE
iptables -A INPUT -m recent --name KNOCK_FOUR   --rcheck --seconds 60 --reap -j KNOCK_FOUR
iptables -A INPUT -m recent --name SESSION      --rcheck --seconds 60 --reap -j SESSION
iptables -A INPUT -m recent --name AUTH         --rcheck --seconds 60 --reap -j AUTH
iptables -A KNOCK_THREE -m recent --name KNOCK_TWO   --remove
iptables -A KNOCK_FOUR  -m recent --name KNOCK_THREE --remove
iptables -A SESSION     -m recent --name KNOCK_FOUR  --remove 
########################################################################################
# to find out... bridge allows remote into eth0? because eth0's in it... also means every node gets limit iptables... cant test till multi iso boot works
# rate limit
# recent
# iplimit
# all set here before state gets to whitelist anything for every service / socket or jump to a force filter chain
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED --ctproto tcp -j ACCEPT #socket_hitcount
iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED --ctproto udp -j ACCEPT #socket_hitcount
########################################################################################
iptables -A INPUT -i lo         -m conntrack --ctstate NEW -j LO
iptables -A INPUT -i bridge     -m conntrack --ctstate NEW -j BRIDGE
iptables -A INPUT -i internal   -m conntrack --ctstate NEW -j INTERNAL
iptables -A INPUT -j LOG --log-prefix "DROPPED" --log-level 6
iptables -A INPUT -j DROP
########################################################################################
iptables -A LO -p udp -d 127.0.0.1 --dport 53 -j ACCEPT         # dns port unbound or iptables forward to 9053 tordns
iptables -A LO -p udp -d 127.0.0.1 --dport 9053 -j ACCEPT       # tor dns port
iptables -A LO -p tcp -d 127.0.0.1 --dport 8080 -j ACCEPT       # nginx webserver port
iptables -A LO -p tcp -d 127.0.0.1 --dport 9050 -j ACCEPT       # tor socks port
iptables -A LO -p tcp -d 127.0.0.1 --dport 9091 -j ACCEPT       # transmission
iptables -A LO -p tcp -d 127.0.0.1 --dport 5037 -j ACCEPT       # android adb
iptables -A LO -p tcp -d 127.0.0.1 --dport 6010:6023 -j ACCEPT  # sshx display ports
iptables -A LO -j LOG --log-prefix "LO" --log-level 6
iptables -A LO -j DROP
########################################################################################
iptables -A BRIDGE -p tcp --dport 8080 -j ACCEPT
iptables -A BRIDGE -p tcp --dport 12723 -j ACCEPT
iptables -A BRIDGE -p tcp --dport 12724 -j ACCEPT
iptables -A BRIDGE -p tcp --dport 12725 -j ACCEPT
iptables -A BRIDGE -j LOG --log-prefix "BRIDGE" --log-level 6
iptables -A BRIDGE -j DROP
########################################################################################
iptables -A INTERNAL -p tcp --dport 8080 -j ACCEPT
iptables -A INTERNAL -p tcp --dport 12723 -j ACCEPT
iptables -A INTERNAL -p tcp --dport 12724 -j ACCEPT
iptables -A INTERNAL -p tcp --dport 12725 -j ACCEPT
iptables -A INTERNAL -j LOG --log-prefix "INTERNAL" --log-level 6
iptables -A INTERNAL -j DROP
########################################################################################
iptables -t nat -A POSTROUTING -o bridge -j MASQUERADE
iptables -A FORWARD -i bridge -o internal -m conntrack --ctstate ESTABLISHED,RELATED --ctproto tcp -j ACCEPT
iptables -A FORWARD -i bridge -o internal -m conntrack --ctstate ESTABLISHED,RELATED --ctproto udp -j ACCEPT
iptables -A FORWARD -p udp -i internal -o bridge -j ACCEPT
iptables -A FORWARD -p tcp -i internal -o bridge -j ACCEPT
########################################################################################
#iptables -t nat -A OUTPUT -s localhost -d localhost -p udp --dport 53 -j REDIRECT --to-port 9053
iptables -A PREROUTING -t nat -i !internal -p tcp --dport 80 -j REDIRECT --to-port 8080
iptables -A PREROUTING -t nat -i !internal -p tcp --dport 443 -j REDIRECT --to-port 8080
########################################################################################
